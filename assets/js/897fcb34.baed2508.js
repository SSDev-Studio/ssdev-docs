"use strict";(self.webpackChunkssdev_docs=self.webpackChunkssdev_docs||[]).push([[958],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,h=p["".concat(l,".").concat(d)]||p[d]||f[d]||o;return t?r.createElement(h,i(i({ref:n},u),{},{components:t})):r.createElement(h,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5038:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return f}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={sidebar_position:1,title:"Default Config"},l=void 0,s={unversionedId:"arcade/claw/default_config",id:"arcade/claw/default_config",title:"Default Config",description:"",source:"@site/docs/arcade/claw/default_config.md",sourceDirName:"arcade/claw",slug:"/arcade/claw/default_config",permalink:"/docs/arcade/claw/default_config",editUrl:"https://github.com/SSDev-Studio/ssdev-docs/docs/arcade/claw/default_config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Default Config"},sidebar:"docsSidebar",previous:{title:"Arcade Claw Machine!",permalink:"/docs/arcade/claw/"},next:{title:"Custom Prizes",permalink:"/docs/arcade/claw/custom_prizes"}},u={},f=[],p={toc:f};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title=config.lua",title:"config.lua"},"-- WinRate = If the value is 20, each game there is a 20% chance of winning the prize. 100 means always winnable. 0 means never winnable. When the prize is not winnable the claw will fail to pickup the prize\n\nlocal defaultPrizes = {\n    ['ch_prop_arcade_claw_plush_02a'] = { -- Left Back\n        PickupBone = 2,\n        offset = vector3(leftSidePrizeX, backPrizeY, defaultZOffsetFloor),\n        WinRate = 20,\n        Reward = {\n            Type = 'Currency',\n            Currency = 'cash',\n            Amount = 1000,\n        }\n    },\n    ['ch_prop_arcade_claw_plush_03a'] = { -- Left Center\n        PickupBone = 2,\n        offset = vector3(leftSidePrizeX, centerPrizeY, defaultZOffsetFloor),\n        WinRate = 30,\n        Reward = {\n            Type = 'Currency',\n            Currency = 'cash',\n            Amount = 1000,\n        }\n    },\n    ['ch_prop_arcade_claw_plush_04a'] = { -- Center Back\n        PickupBone = 2,\n        offset = vector3(centerSidePrizeX, backPrizeY, defaultZOffsetFloor),\n        WinRate = 40,\n        Reward = {\n            Type = 'Currency',\n            Currency = 'cash',\n            Amount = 1000,\n        }\n    },\n    ['ch_prop_arcade_claw_plush_05a'] = { -- Center Center\n        PickupBone = 2,\n        offset = vector3(centerSidePrizeX, centerPrizeY, defaultZOffsetFloor),\n        WinRate = 70,\n        Reward = {\n            Type = 'Currency',\n            Currency = 'cash',\n            Amount = 1000,\n        }\n    },\n    ['ch_prop_arcade_claw_plush_06a'] = { -- Center Front\n        PickupBone = 0,\n        offset = vector3(centerSidePrizeX, frontPrizeY, defaultZOffsetFloor),\n        WinRate = 100,\n        Reward = {\n            Type = 'Event',\n            Event = 'ssdev_arcade_claw:ExampleWinEvent',\n        }\n    },\n    ['ch_prop_princess_robo_plush_07a'] = { -- Right Back\n        PickupBone = 2,\n        offset = vector3(rightSidePrizeX, backPrizeY, defaultZOffsetFloor),\n        WinRate = 80,\n        Reward = {\n            Type = 'Item',\n            Item = 'sandwich',\n            Amount = 10,\n        }\n    },\n    ['ch_prop_shiny_wasabi_plush_08a'] = { -- Right Center\n        PickupBone = 2,\n        offset = vector3(rightSidePrizeX, centerPrizeY, defaultZOffsetFloor),\n        WinRate = 15,\n        Reward = {\n            Type = 'Item',\n            Item = 'sandwich',\n            Amount = 10,\n        }\n    },\n    ['ch_prop_master_09a'] = { -- Right Front\n        PickupBone = 2,\n        offset = vector3(rightSidePrizeX, frontPrizeY, defaultZOffsetFloor),\n        WinRate = 5,\n        Reward = {\n            Type = 'Item',\n            Item = 'sandwich',\n            Amount = 10,\n        }\n    }\n}\n\nConfig = {\n    LoggingLevel = 3, -- 0 = Errors, 1 = Warnings, 2 = Info, 3 = Debug, 4 = Trace\n    TargettingMode = 'QBTarget', -- Distance | Command | QBTarget | QTarget\n    Machines = {\n        [\"legion\"] = { -- Name of the machine\n            MachineModel = 'ch_prop_arcade_claw_01a', -- This is the only model in GTA. If you stream custom claw machine models, change it here.\n            Distance = 2.5, -- Distance you have to be from the machine to be able to use it.\n            Position = vector3(207.6, -919.66, 30.69), -- The position of the machine.\n            Heading = 229.95, -- The heading of the machine.\n            ClawMoveSpeed = 0.005, -- The speed of the claw. Increase = faster | Decrease = slower\n            Prizes = defaultPrizes, -- Prizes this machine contains\n            Price = {\n                Type = 'Currency', -- Currency/Item\n                Currency = 'cash', -- Currency name/Item name\n                Amount = 1000, -- Amount to take from player\n            },\n            DeletePrizeOnWin = false, -- True = Will delete the entity when won | False = Will teleport the entity back to its starting position\n            Networked = false  -- [Placeholder for future update] True = machine, claw and prizes will be networked. (This is not recommended as when entities move they are jittery) | False = machine, claw and prizes will be local (Players will not see what other players see)\n        },\n        [\"eclipse\"] = {\n            MachineModel = 'ch_prop_arcade_claw_01a',\n            Distance = 2.5,\n            Position = vector3(-803.12, 234.41, 75.68),\n            Heading = 359.28,\n            ClawMoveSpeed = 0.005,\n            Prizes = defaultPrizes,\n            Price = {\n                Type = 'Currency',\n                Currency = 'cash',\n                Amount = 1000,\n            },\n            Currency = 'cash',\n            DeletePrizeOnWin = false,\n            Networked = false\n        }\n    }\n}\n\nLogger = exports[\"ssdev_framework\"]:GetLogger(GetCurrentResourceName(), Config.LoggingLevel)\nFramework = exports[\"ssdev_framework\"]:GetFramework()\n")))}d.isMDXComponent=!0}}]);